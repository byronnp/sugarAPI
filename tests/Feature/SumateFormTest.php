<?php

namespace Tests\Feature;

use App\Models\Contacts;
use App\Models\WsToyotaGo;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Http;
use Illuminate\Http\Client\Request;
use Tests\TestCase;

class SumateFormTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    public $dataFormContact = [];
    public $dataFormDestinos = [];
    public $dataFormNegocios = [];

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub


        $this->dataFormContact = [
            'nombre' => $this->faker->firstName,
            'apellido' => $this->faker->lastName,
            'cedula' => $this->faker->numerify('##########'),
            'email' => $this->faker->email,
            'telefono' => $this->faker->numerify('##########'),
            'fecha_nacimiento' => $this->faker->date(),
            'ciudad_residencia' => $this->faker->city,
            'tiene_toyotaNo' => $this->faker->boolean,
            'modelo' => 'Fortuner',
            'concesionario' => '01',
            'anio' => $this->faker->numerify('####')
        ];
        $this->dataFormDestinos = [
            'nombre' => $this->faker->firstName,
            'apellido' => $this->faker->lastName,
            'email' => $this->faker->email,
            'cedula' => $this->faker->numerify('##########')
        ];
        $this->dataFormNegocios = [
            'nombre' => $this->faker->firstName,
            'apellido' => $this->faker->lastName,
            'email' => $this->faker->email,
            'cedula' => $this->faker->numerify('##########')
        ];
    }



    public function testOk()
    {
        $response = $this->get('/');
        $response->assertOk();
    }
    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function sumateForm()
    {
        /*
        $urlSumateForm = "https://crm.toyotago.com.ec/acton/eform/44287/2ab85ccb-1d40-4690-b957-8cf4a6e786e8/d-ext-0001";

        Http::fake([
            $urlSumateForm => Http::response([
                'status' => true
            ], 200)
        ]);
        */

        $response = $this->get('/');
        $response->assertStatus(200);
        /*
        $htmlExpected = '<div id="gform_confirmation_message_2" class="gform_confirmation_message_2 gform_confirmation_message" data-gtm-vis-recent-on-screen-47109072_11="5116" data-gtm-vis-first-on-screen-47109072_11="5116" data-gtm-vis-total-visible-time-47109072_11="100" data-gtm-vis-has-fired-47109072_11="1">Â¡Gracias por contactar con nosotros! Nos pondremos en contacto contigo muy pronto.</div>';
        $this->assertEquals($htmlExpected, $response->content());
        $contact = WsToyotaGo::first();
        $this->assertEquals($this->dataFormContact["nombre"], $contact->first_name);
        $this->assertEquals($this->dataFormContact["apellido"], $contact->last_name);
        $this->assertEquals($this->dataFormContact["email"], $contact->email);
        $this->assertEquals($this->dataFormContact["cedula"], $contact->identification);

        Http::assertSent(function (Request $request) use ($urlSumateForm) {
            return $request->url() == $urlSumateForm &&
                $request['First Name'] == $this->dataFormContact["nombre"] &&
                $request['Last Name'] == $this->dataFormContact["apellido"] &&
                $request['E-mail Address'] == $this->dataFormContact["email"] &&
                $request['Cedula'] == $this->dataFormContact["cedula"];
        });
        */
    }

    /**
     *
     */
    public function createDestino()
    {
        //dd(http_build_query($this->data));
        $response = $this->get('/api/destinos?' . http_build_query($this->dataFormDestinos));
        dd($response->content());
        $response->assertStatus(200);



    }

    /**
     *
     */
    public function createNegocio()
    {
        //dd(http_build_query($this->data));
        $response = $this->get('/api/negocios?' . http_build_query($this->dataFormNegocios));
        dd($response->content());
        $response->assertStatus(200);

    }

    /**
     *
     */
    public function sendDataToActon()
    {
        $urlSumateForm = "https://crm.toyotago.com.ec/acton/eform/44287/2ab85ccb-1d40-4690-b957-8cf4a6e786e8/d-ext-0001";
        $urlDestinosForm = "https://crm.toyotago.com.ec/acton/eform/44287/fadd9b54-c9ac-442f-b7f6-3f6d8a300d74/d-ext-0001";


        $response = $this->get('/api/negocios?' . http_build_query($this->dataFormNegocios));
        dd($response->content());
        $response->assertStatus(200);

    }
}

<?php

namespace Tests\Feature;

use App\Models\Companies;
use App\Models\User;
use App\Models\WSInconcertLogs;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Http;
use Illuminate\Http\Client\Request;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class CreateTicketsInconcertTest extends TestCase
{
  use RefreshDatabase, WithFaker;
  public $data;
  protected function setUp(): void
  {
    parent::setUp(); // TODO: Change the autogenerated stub
    Companies::factory()->create();
    Sanctum::actingAs(
      User::factory()->create(),
      ['environment:dev']
    );

    $this->data = [
      'datosSugarCRM' => [
        'numero_identificacion' => $this->faker->numerify('##########'),
        'tipo_identificacion' => 'C',
        'email' => 'frvr@gmail.com',
        'user_name' => 'CG_RAMOS',
        'nombres' => 'MANUEL',
        'apellidos' => 'VARGAS',
        'celular' => '0987510455',
        'telefono' => '022072829',
        'estado' => '1',
        'motivo_cierre' => 'no_contesta',
        'linea_negocio' => '2',
        'tipo_transaccion' => '1',
        'marca' => '1',
        'modelo' => '1',
        'anio' => '2020',
        'placa' => 'PCY7047',
        'kilometraje' => '190000',
        'color' => 'GRIS',
        'asunto' => 'molestias',
        'id_interaccion_inconcert' => 'id_interaccion_inconcert',
        'comentario_cliente' => 'comentario_cliente',
        'description' => 'description',
        'porcentaje_discapacidad' => '30_49',
        'medio' => 5,
        'campania' => '5e686580-ee19-11ea-97ea-000c297d72b1'
      ],
      'datos_adicionales' => [
        'title' => 'Agendamiento Test Drive',
        'pageUrl' => 'staging38472.casabaca.com\/test-drive',
        'thankyouPageUrl' => 'staging38472.casabaca.com\/test-drive',
        'fields' => [
          ['key' => 'vehiculo_modelo','nombre' => 'Yaris Sedan TM'],
          ['key' => 'vehiculo_version','nombre' => 'XLE'],
          ['key' => 'personal_cedula','nombre' => '0962465258'],
          ['key' => 'personal_nombres','nombre' => 'Jean Carlos'],
          ['key' => 'personal_apellidos','nombre' => 'Hernandez Torres'],
          ['key' => 'personal_correo','nombre' => 'jeanchernandez@gmail.co'],
          ['key' => 'personal_telefono','nombre' => '0962465258'],
          ['key' => 'lugar_ubicacion','nombre' => 'Agencia'],
          ['key' => 'lugar_concesionario','nombre' => 'Agencia Condado'],
          ['key' => 'lugar_fecha','nombre' => '2021-06-15'],
          ['key' => 'lugar_horario','nombre' => '11:00 - 13:00'],
          ['key' => 'aceptacion_tyc','nombre' => true]
          ]
      ]
    ];
  }
    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_dataToSendInconcert()
    {
      Http::fake([
        env('inconcertWS') => Http::response([
          'status' => true,
          'description' => 'OK',
          'data' => [
            "status" => "new",
            "contactId" => "contactId"
          ]
        ], 200)
      ]);

      $response = $this->json('POST', $this->baseUrl . 'tickets', $this->data);
      $ticketCreated = json_decode($response->content());

      Http::assertSent(function (Request $request) use($ticketCreated){
        return $request->url() == env('inconcertWS') &&
          $request['serviceToken'] == '37c22f60ffd65cd8d73175dafc2337ef' &&
          $request['serviceAction'] == 'c2c' &&
          $request['contentUrl'] == $this->data['datos_adicionales']["pageUrl"] &&
          $request['thankyouPageUrl'] == $this->data['datos_adicionales']["thankyouPageUrl"] &&
          $request['contactData']['numero_identificacion'] == $this->data['datosSugarCRM']['numero_identificacion'] &&
          $request['contactData']['tipo_identificacion'] == $this->data['datosSugarCRM']['tipo_identificacion'] &&
          $request['contactData']['email'] == $this->data['datosSugarCRM']['email'] &&
          $request['contactData']['firstname'] == $this->data['datosSugarCRM']['nombres'] &&
          $request['contactData']['lastname'] == $this->data['datosSugarCRM']['apellidos'] &&
          $request['contactData']['tipo_transaccion'] == getTipoTransaccion($this->data['datosSugarCRM']['tipo_transaccion']) &&
          $request['contactData']['linea_negocio'] == getLineaNegocio($this->data['datosSugarCRM']['linea_negocio']) &&
          $request['contactData']['TicketId'] == $ticketCreated->data->ticket_id &&
          $request['contactData']['TicketName'] == $ticketCreated->data->ticket_name &&
          $request['contactData']['TicketInteraction'] == $ticketCreated->data->interaction_id &&
          $request['contactData']['language'] == 'es' &&
          $request['contactData']['phone'] == $this->data['datosSugarCRM']['celular'] &&
          $request['contactData']['vehiculo_modelo'] == $this->data['datos_adicionales']['fields'][0]['nombre'] &&
          $request['contactData']['vehiculo_version'] == $this->data['datos_adicionales']['fields'][1]['nombre'] &&
          $request['contactData']['personal_cedula'] == $this->data['datos_adicionales']['fields'][2]['nombre'] &&
          $request['contactData']['personal_nombres'] == $this->data['datos_adicionales']['fields'][3]['nombre'] &&
          $request['contactData']['personal_apellidos'] == $this->data['datos_adicionales']['fields'][4]['nombre'] &&
          $request['contactData']['personal_correo'] == $this->data['datos_adicionales']['fields'][5]['nombre'] &&
          $request['contactData']['personal_telefono'] == $this->data['datos_adicionales']['fields'][6]['nombre'] &&
          $request['contactData']['lugar_ubicacion'] == $this->data['datos_adicionales']['fields'][7]['nombre'] &&
          $request['contactData']['lugar_concesionario'] == $this->data['datos_adicionales']['fields'][8]['nombre'] &&
          $request['contactData']['lugar_fecha'] == $this->data['datos_adicionales']['fields'][9]['nombre'] &&
          $request['contactData']['lugar_horario'] == $this->data['datos_adicionales']['fields'][10]['nombre'] &&
          $request['contactData']['aceptacion_tyc'] == $this->data['datos_adicionales']['fields'][11]['nombre'];
      });
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_dataToSendLogs()
    {
      Http::fake([
        env('inconcertWS') => Http::response([
          'status' => true,
          'description' => "OK",
          'data' => [
            "status" => "new",
            "contactId" => "contactId"
          ]
        ], 200)
      ]);

      $response = $this->json('POST', $this->baseUrl . 'tickets', $this->data);
      $ticketCreated = json_decode($response->content());

      $wsLogs = WSInconcertLogs::where('contact_id', 'contactId')->first();
      $this->assertEquals(env('inconcertWS'), $wsLogs->route);
      $this->assertEquals('sugar_dev', $wsLogs->environment);
      $this->assertEquals('tests_source', $wsLogs->source);
      $this->assertEquals($ticketCreated->data->ticket_id, $wsLogs->ticket_id);
      $this->assertEquals($ticketCreated->data->interaction_id, $wsLogs->interaction_id);
      $this->assertEquals('OK', $wsLogs->description);
      $this->assertEquals('1', $wsLogs->status);
    }
}

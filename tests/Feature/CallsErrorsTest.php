<?php

namespace Tests\Feature;

use App\Models\Prospeccion;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class CallsErrorsTest extends TestCase
{
    use RefreshDatabase, WithFaker;
    public $dataCall = [];
    public $dataTicket = [];

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->setInitDataUserSanctum();
    }

    /** @test */
    public function CallIncompleteData()
    {
        $dataCall = [
            'datosSugarCRM' => [
                'user_name_asesor' => 'user_name_not_exists', //10296f94-ebf3-42a8-a42d-5c880a18abca
                'user_name_call_center' => 'user_name_not_exists', //15396f5c-dbf1-5a6c-9637-5a8b8f14aaf3
                'medio' => 'medio_not_exists',
                'campania' => 'campania_not_exists',
                'ticket' => [
                    'id' => 'id_not_exists',
                    'is_closed' => false
                ]
            ]
        ];

        $response = $this->json('POST', $this->baseUrl . 'calls', $dataCall);
        $content = json_decode($response->content());

        $err_user_name_asesor = 'datosSugarCRM.user_name_asesor';
        $err_user_call_center = 'datosSugarCRM.user_name_call_center';
        $err_date_start = 'datosSugarCRM.date_start';
        $err_duration_hours = 'datosSugarCRM.duration_hours';
        $err_duration_minutes = 'datosSugarCRM.duration_minutes';
        $err_status = 'datosSugarCRM.status';
        $err_direction = 'datosSugarCRM.direction';
        $err_type = 'datosSugarCRM.type';
        $err_category = 'datosSugarCRM.category';
        $err_notes = 'datosSugarCRM.notes';
        $err_ticket = 'datosSugarCRM.ticket.id';
        $err_medio = 'datosSugarCRM.medio';
        $err_campania = 'datosSugarCRM.campania';
        $response->assertStatus(422);

        $this->assertEquals($content->errors->$err_user_name_asesor[0], 'User-name inválido, asesor no se encuentra registrado');
        $this->assertEquals($content->errors->$err_user_call_center[0], 'User-name inválido, call center no se encuentra registrado');
        $this->assertEquals($content->errors->$err_date_start[0], 'La fecha de inicio de llamada es requerida');
        $this->assertEquals($content->errors->$err_duration_hours[0], 'Duration_hours es requerido');
        $this->assertEquals($content->errors->$err_duration_minutes[0], 'Duration_minutes es requerido');
        $this->assertEquals($content->errors->$err_status[0], 'Estado de la llamada es requerido');
        $this->assertEquals($content->errors->$err_direction[0], 'Direction es requerido');
        $this->assertEquals($content->errors->$err_type[0], 'Type es requerido');
        $this->assertEquals($content->errors->$err_category[0], 'Category es requerido');
        $this->assertEquals($content->errors->$err_notes[0], 'Notas es requerido');
        $this->assertEquals($content->errors->$err_ticket[0], 'Ticket inválido, id no existe');
        $this->assertEquals($content->errors->$err_medio[0], 'Medio no contiene un valor válido, valores válidos: {"5":"Empleados","6":"App Talleres"}');
        $this->assertEquals($content->errors->$err_campania[0], 'Campaña no existe en SUGAR');
    }

    /** @test */
    public function MeetingIncompleteData()
    {
        $dataCall = [
            'datosSugarCRM' => [
                'user_name_asesor' => 'CG_RAMOS', //10296f94-ebf3-42a8-a42d-5c880a18abca
                'user_name_call_center' => 'RR_TORRES', //15396f5c-dbf1-5a6c-9637-5a8b8f14aaf3
                'date_start' => '2021-12-24 19:59',
                'duration_hours' => '0',
                'duration_minutes' => '10',
                'status' => 'Held',
                'direction' => 'Inbound',
                'type' => 'cita',
                'category' => '2',
                'notes' => 'Llamar el día lunes',
                'ticket' => [
                    'id' => 'not_exists',
                    'is_closed' => false
                ],
                'meeting' => [
                ]
            ]
        ];

        $response = $this->json('POST', $this->baseUrl . 'calls', $dataCall);
        $content = json_decode($response->content());
        $err_meeting_status = 'datosSugarCRM.meeting.status';
        $err_meeting_date = 'datosSugarCRM.meeting.date';
        $err_meeting_duration_hours = 'datosSugarCRM.meeting.duration_hours';
        $err_meeting_duration_minutes = 'datosSugarCRM.meeting.duration_minutes';
        $err_meeting_subject = 'datosSugarCRM.meeting.subject';
        $err_meeting_comments = 'datosSugarCRM.meeting.comments';
        $err_meeting_location = 'datosSugarCRM.meeting.location';
        $err_meeting_type = 'datosSugarCRM.meeting.type';
        $err_meeting_visit_type = 'datosSugarCRM.meeting.visit_type';
        $err_meeting_linea_negocio = 'datosSugarCRM.meeting.linea_negocio';
        $err_client_tipo_identificacion = 'datosSugarCRM.meeting.client.tipo_identificacion';
        $err_client_numero_identificacion = 'datosSugarCRM.meeting.client.numero_identificacion';
        $err_client_gender = 'datosSugarCRM.meeting.client.gender';
        $err_client_names = 'datosSugarCRM.meeting.client.names';
        $err_client_surnames = 'datosSugarCRM.meeting.client.surnames';
        $err_client_cellphone_number= 'datosSugarCRM.meeting.client.cellphone_number';
        $err_client_email = 'datosSugarCRM.meeting.client.email';

        $response->assertStatus(422);

        $this->assertEquals($content->errors->$err_meeting_status[0], 'Meeting.Status es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_date[0], 'La fecha de la cita es requerida');
        $this->assertEquals($content->errors->$err_meeting_duration_hours[0], 'Meeting.duration_hours es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_duration_minutes[0], 'Meeting.duration_minutes es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_subject[0], 'Meeting.subject es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_comments[0], 'Meeting.comments es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_location[0], 'Meeting.location es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_type[0], 'Meeting.type es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_visit_type[0], 'Meeting.visit_type es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_meeting_linea_negocio[0], 'Meeting.linea_negocio es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_tipo_identificacion[0], 'Meeting.client.tipo_identificacion es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_numero_identificacion[0], 'Meeting.client.numero_identificacion es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_gender[0], 'Meeting.client.gender es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_names[0], 'Meeting.client.names es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_surnames[0], 'Meeting.client.surnames es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_cellphone_number[0], 'Meeting.client.cellphone_number es requerido si el tipo de llamada es cita');
        $this->assertEquals($content->errors->$err_client_email[0], 'Meeting.client.email es requerido si el tipo de llamada es cita');
    }

    /** @test */
    public function MeetingMaxNumberPhone()
    {
        $dataCall = [
            'datosSugarCRM' => [
                'user_name_asesor' => 'CG_RAMOS', //10296f94-ebf3-42a8-a42d-5c880a18abca
                'user_name_call_center' => 'RR_TORRES', //15396f5c-dbf1-5a6c-9637-5a8b8f14aaf3
                'date_start' => '2021-12-24 19:59',
                'duration_hours' => '0',
                'duration_minutes' => '10',
                'status' => 'Held',
                'direction' => 'Inbound',
                'type' => 'cita',
                'category' => '2',
                'notes' => 'Llamar el día lunes',
                'ticket' => [
                    'id' => 'not_exists',
                    'is_closed' => false
                ],
                'meeting' => [
                  'client' => [
                        'cellphone_number' => '12345678910',
                        'phone_home' => '12345678910'
                    ]
                ]
            ]
        ];

        $response = $this->json('POST', $this->baseUrl . 'calls', $dataCall);
        $content = json_decode($response->content());

        $err_meeting_cellphone_number = 'datosSugarCRM.meeting.client.cellphone_number';
        $err_meeting_phone_home = 'datosSugarCRM.meeting.client.phone_home';

        $response->assertStatus(422);

        $this->assertEquals($content->errors->$err_meeting_cellphone_number[0], 'Meeting.client.cellphone_number debe ser máximo 10 dígitos');
        $this->assertEquals($content->errors->$err_meeting_phone_home[0], 'Meeting.client.phone_home debe ser máximo 9 dígitos');
    }
}

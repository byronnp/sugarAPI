<?php

namespace Tests\Feature;

use App\Models\LandingPages;
use App\Models\Medio;
use App\Models\Tickets;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class TicketsLandingTest extends TestCase
{
    use RefreshDatabase, WithFaker;
    public $dataLanding = [];
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->setInitDataUserSanctum();
        $this->dataLanding = [
            'datosSugarCRM' => [
              "tipo_identificacion"=> "C",
              "numero_identificacion"=> "1003088414",
              "nombres"=> $this->faker()->name,
              "apellidos"=> $this->faker()->lastName,
              "celular"=> $this->faker()->numerify('##########'),
              "telefono"=> $this->faker()->numerify('#########'),
              "email"=> $this->faker()->email,
              "concesionario"=> "Quito (Casabaca)",
              "provincia"=> "",
              "ciudad"=> "",
              "direccion"=> $this->faker()->address,
              "modelo"=> "hilux-at",
              "version"=> "hilux-at-Hilux CD 2.7 Gas 4x2",
              "plan"=> "diplomaticos-y-ong",
              "tipo_discapacidad"=> "discapacitados",
              "porc_discapacidad"=> "85 - 100%",
              "comentarios"=> "test test test test tetstest test test test tetstest test test test tets",
              "formulario"=> "Exonerados",
              "fecha_creacion"=> "2020-08-28 16:09:40",
              "porcentaje_discapacidad" => "30_49",
            ]
        ];
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function testCreateTicketLandingPage()
    {
        $response = $this->json('POST', $this->baseUrl . 'landing_ticket', $this->dataLanding);
        $content = json_decode($response->content());

        $response->assertStatus(200);
        $this->assertNotNull($content->data->ticket_id);
        $this->assertNotNull($content->data->ticket_name);
        $this->assertNotNull($content->data->interaction_id);

        $landingPage = LandingPages::where('name', $this->dataLanding["formulario"])->first();
        $medio = Medio::find($landingPage->medio);

        $ticket = Tickets::find($content->data->ticket_id);
        $this->assertEquals($this->dataTicket['datosSugarCRM']['numero_identificacion'], $ticket->numero_identificacion);
        $this->assertEquals($medio->fuente_id, $ticket->fuente);
        $this->assertEquals($medio->fuente_id, $ticket->ticketsCstm->medio_c);
        $this->assertEquals($landingPage->medio, $this->dataTicket['datosSugarCRM']['tipo_identificacion']);
        $this->assertEquals($this->dataTicket['datosSugarCRM']['email'], $ticket->email);
        $this->assertEquals($this->dataTicket['datosSugarCRM']['nombres'], $ticket->nombres);
        $this->assertEquals(1, $ticket->estado);
        $this->assertEquals($landingPage->business_line_id, $ticket->linea_negocio);
        $this->assertEquals($ticket->ticketsCstm->id_c, $ticket->id);
        $this->assertEquals($ticket->estado, $ticket->ticketsCstm->flag_estados_c);
        $this->assertEquals($ticket->ticketsCstm->porcentaje_discapacidad_c, $this->dataTicket['datosSugarCRM']['porcentaje_discapacidad']);
        $this->assertEquals($landingPage->campaign, $ticket->ticketsCstm->campaign_id_c);
    }
}

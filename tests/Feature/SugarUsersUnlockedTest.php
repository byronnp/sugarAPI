<?php

namespace Tests\Feature;

use App\Models\SugarUsersBlocked;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Laravel\Sanctum\Sanctum;
use Tests\TestCase;

class SugarUsersUnlockedTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    public $dataCall = [];
    public $dataTicket = [];

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->setInitDataUser();
    }

    /**
     * Test a console command.
     *
     * @return void
     */
    public function test_console_command_unlockedUsers()
    {
        $userBlockedLateDate = new SugarUsersBlocked();
        $userBlockedLateDate->sugar_user_id = $this->faker->numerify('##########');
        $userBlockedLateDate->date_unblocked = "2021-06-15";
        $userBlockedLateDate->status = "inactive";
        $userBlockedLateDate->save();

        $date = date("Y-m-d",strtotime(date("Y-m-d")."+ 1 days"));
        $userBlockedLateDate = new SugarUsersBlocked();
        $userBlockedLateDate->sugar_user_id = $this->faker->numerify('##########');
        $userBlockedLateDate->date_unblocked = $date;
        $userBlockedLateDate->status = "inactive";
        $userBlockedLateDate->save();

        $this->artisan('active:BlockedUsers');

        $usersUnlocked = SugarUsersBlocked::where('status', 'inactive')->count();
        $userUnlocked = SugarUsersBlocked::where('status', 'inactive')->first();

        $this->assertEquals(1, $usersUnlocked);
        $this->assertEquals($date, $userUnlocked->date_unblocked);

    }

}

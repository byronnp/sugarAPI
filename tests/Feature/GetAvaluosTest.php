<?php

namespace Tests\Feature;

use App\Models\Avaluos;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class GetAvaluosTest extends TestCase
{
    use RefreshDatabase, WithFaker;
    public $dataAvaluo = [];

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->setInitDataUserSanctum();

        $this->dataAvaluo = [
            "description" => "description Avaluo",
            "placa" => "PDA-1413",
            "marca" => "1",
            "modelo" => "10",
            "color" => "1",
            "recorrido" => "10000",
            "tipo_recorrido" => "km", //mi
            "estado_avaluo" => "N",
            "comentario" => "COMENTARIO",
            "observacion" => "OBSERVACION",
            "coordinador" => "b9187d88-6ee4-c794-27f5-552bb40ee0d4", //users
            "contacto" => "0015ad44-0a08-11ea-b67c-5883aaf14456", //contactos
        ];
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_should_get_avaluo()
    {
        $this->json('POST', $this->baseUrl . 'createUpdateAvaluo', $this->dataAvaluo);
        $this->dataAvaluo["placa"] = "PCX-7120";
        $this->json('POST', $this->baseUrl . 'createUpdateAvaluo', $this->dataAvaluo);


        $response = $this->json('GET', $this->baseUrl . 'getAvaluos', ['coordinador' => 'b9187d88-6ee4-c794-27f5-552bb40ee0d4']);
        $contentGetAvaluos = json_decode($response->content());
        $content = json_decode($response->content());

        $existsAvaluo = array_search('PCX-7120', array_column($content->avaluos, 'placa'));
        $this->assertNotNull($existsAvaluo);

        $existsAvaluo = array_search('PDA-1413', array_column($content->avaluos, 'placa'));
        $this->assertNotNull($existsAvaluo);
    }

    public function test_should_not_get_avaluo()
    {
        /*$response = $this->json('GET', $this->baseUrl . 'get_avaluo', ['id' => 'notExists']);
        $contentGetAvaluo = json_decode($response->content());
        $this->assertEquals($contentGetAvaluo->error, 'Avaluo not found');*/
    }
}
